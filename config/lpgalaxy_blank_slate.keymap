/*
* Copyright (c) 2022 Pete Johanson
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define QWERTY_BASE 1
#define TBLE_ORTHO 1
#define LOWER_L 1
#define RAISE_L 2
#define NUMBERS_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
{ quick_tap_ms = <200>; };

{
    chosen {
        zmk,matrix_transform = &ortho_transform;
    };

    macros {
        ZMK_MACRO(thumbs_up,
            wait-ms = <1>;
            tap-ms = <5>;
            bindings = <&kp PLUS &kp COLON &kp PLUS &kp N1 &kp COLON &kp RET>;
        )
    };

    behaviors {
        td_rsft_ent: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_RSFT_ENT";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&kp RSFT>, <&kp RENTER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "QWERTY";
            bindings = <
                &kp ESC     &kp Q       &kp W       &kp E        &kp R           &kp T           &kp Y            &kp U           &kp I        &kp O        &kp P           &kp BSPC
                &kp TAB     &kp A       &kp S       &kp D        &kp F           &kp G           &kp H            &kp J           &kp K        &kp L        &kp SEMI        &kp QUOT
                &kp LSHFT   &kp Z       &kp X       &kp C        &kp V           &kp B           &kp N            &kp M           &kp COMMA    &kp DOT      &kp FSLH        &td(td_rsft_ent)
                &cmd_ctrl   &kp LGUI    &kp LALT    &kp LCTRL    &mo LOWER_L     &kp SPACE       &mo RAISE_L      &kp LEFT        &kp DOWN     &kp UP       &kp RIGHT       &trans
            >;
        };

        lower_layer {
            label = "LOWER";
            bindings = <
                &kp GRAVE   &kp EXCL    &kp AT      &kp HASH     &kp DLR         &kp PRCNT       &kp CARET        &kp AMPS        &kp ASTR     &kp LPAR     &kp RPAR        &kp BSPC
                &kp DEL     &kp F1      &kp F2      &alt_tab     &kp FIND        &kp F5          &kp F6           &kp UNDS        &kp PLUS     &kp LBRC     &kp RBRC        &kp PIPE
                &trans      &kp F7      &kp UNDO    &kp ALL      &kp CUT         &kp COPY        &kp PASTE        &trans          &trans       &kp DOT      &trans          &trans
                &kp ONEPASS &trans      &trans      &kp NEW_TAB  &trans          &kp SPOTLIGHT   &mo NUMBERS_L    &trans          &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP    &trans
            >;
        };

        raise_layer {
            label = "RAISE";
            bindings = <
                &kp MINUS   &kp N1      &kp N2      &kp N3       &kp N4          &kp N5          &kp N6           &kp N7          &kp N8       &kp N9       &kp N0          &kp PLUS
                &kp DEL     &trans      &trans      &trans       &trans          &trans          &trans           &kp MINUS       &kp EQL      &kp LBKT     &kp RBKT        &kp BSLS
                &trans      &trans      &trans      &trans       &trans          &trans          &trans           &trans          &trans       &kp DOT      &trans          &trans
                &rgb_tog    &rgb_vad    &rgb_vai    &rgb_mod     &mo NUMBERS_L   &kp EMOJI       &trans           &kp CAPSWORD    &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP    &trans
            >;
        };

        numbers_layer {
            label = "NUMBERS";
            bindings = <
                &kp CAD     &trans      &trans      &trans       &trans          &trans          &trans           &trans          &kp N7       &kp N8       &kp N9          &kp MINUS
                &trans      &trans      &trans      &trans       &trans          &trans          &trans           &trans          &kp N4       &kp N5       &kp N6          &kp PLUS
                &trans      &trans      &trans      &trans       &trans          &trans          &trans           &trans          &kp N1       &kp N2       &kp N3          &kp EQL
                &trans      &trans      &trans      &to 0        &to 0           &kp SPACE       &to 0            &kp N0         &kp N0       &kp DOT        &kp RET         &trans
            >;
        };
    };

    behaviors {
        cmd_ctrl: mod_tap {
            compatible = "zmk,behavior-mod-tap";
            label = "CMD_CTRL";
            tapping-term-ms = <200>;
            bindings = <&kp LGUI>, <&kp LCTRL>;
            #binding-cells = <0>;
        };
        alt_tab: alt_tab {
            compatible = "zmk,behavior-hold-tap";
            label = "ALT_TAB_BEHAVIOR";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&none>, <&kp TAB>;
            hold-trigger-key-position = <8>;
            hold-trigger-on-release;
        };
        capsword: caps_word {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS_WORD";
            #binding-cells = <0>;
        };
        kp_onepass: command_mod_macro {
            compatible = "zmk,behavior-command-mod-macro";
            label = "kp_onepass";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp BSLH>;
            timeout-ms = <500>;
        };
        kp_emoji: command_mod_macro {
            compatible = "zmk,behavior-command-mod-macro";
            label = "kp_emoji";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp LCTRL &kp SPACE>, <&kp LGUI &kp DOT>;
            timeout-ms = <500>;
        };
        kp_spotlight: command_mod_macro {
            compatible = "zmk,behavior-command-mod-macro";
            label = "kp_spotlight";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp SPACE>;
            timeout-ms = <500>;
        };
        kp_find: command_mod_macro {
            compatible = "zmk,behavior-command-mod-macro";
            label = "kp_find";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp F>, <&kp LCTRL &kp F>;
            timeout-ms = <500>;
        };
        kp_new_tab: command_mod_macro {
            compatible = "zmk,behavior-command-mod-macro";
            label = "kp_new_tab";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp T>, <&kp LCTRL &kp T>;
            timeout-ms = <500>;
        };
        kp_copy: command_mod_macro {
            compatible = "zmk,behavior-command-mod-macro";
            label = "kp_copy";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp C>, <&kp LCTRL &kp C>;
            timeout-ms = <500>;
        };
        kp_paste: command_mod_macro {
            compatible = "zmk,behavior-command-mod-macro";
            label = "kp_paste";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp V>, <&kp LCTRL &kp V>;
            timeout-ms = <500>;
        };
        kp_all: command_mod_macro {
            compatible = "zmk,behavior-command-mod-macro";
            label = "kp_all";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp A>, <&kp LCTRL &kp A>;
            timeout-ms = <500>;
        };
        kp_cut: command_mod_macro {
            compatible = "zmk,behavior-command-mod-macro";
            label = "kp_cut";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp X>, <&kp LCTRL &kp X>;
            timeout-ms = <500>;
        };
        kp_undo: command_mod_macro {
            compatible = "zmk,behavior-command-mod-macro";
            label = "kp_undo";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp Z>, <&kp LCTRL &kp Z>;
            timeout-ms = <500>;
        };
        kp_scrsht: command_mod_macro {
            compatible = "zmk,behavior-command-mod-macro";
            label = "kp_scrsht";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp LSFT &kp S>;
            timeout-ms = <500>;
        };
        kp_cad: command_mod_macro {
            compatible = "zmk,behavior-command-mod-macro";
            label = "kp_cad";
            #binding-cells = <0>;
            bindings = <&kp LGUI &kp LSFT &kp LALT &kp ESC>;
            timeout-ms = <500>;
        };
    };
};
